{"version":3,"sources":["firebase.js","components/IconButton.js","components/Header.js","components/ScrollToTop.js","components/Wishlist.js","components/Cart.js","components/BrowseBy.js","components/WallpaperList.js","components/Modal.js","components/Footer.js","wallpapers.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","IconButton","buttonClass","fontIcon","fontTitle","fontClass","spanText","onClickHandler","className","onClick","icon","title","Header","props","displayOrCloseCartOrWishlist","cartArray","length","ScrollToTop","arrowVisibility","window","pageYOffset","setState","isArrowDisplayed","scrollToTopOfPage","scrollTo","top","behavior","state","scrollComponent","this","document","addEventListener","Component","Wishlist","wishlistArray","map","wallpaper","src","image","alt","removeWallpaperFromCartorWishlist","id","wallpaperId","Cart","price","cartSubtotal","toFixed","BrowseBy","displayCategoryWallpapers","WallpaperList","wallpaperArray","isInWishlist","some","picture","tabIndex","addWallpaperToCartorWishlist","Modal","displayOrCloseModal","Footer","wallpapers","inventory","category","library","add","faStar","faTrash","faTimes","faShoppingCart","faArrowUp","App","wallpaperArrayByCategory","filter","wallpaperToBeAdded","cartOrWishlist","dbRef","database","ref","wishlistWallpaper","push","child","remove","isCartDisplayed","console","log","isWishlistDisplayed","isModalDisplayed","dbWishlistRef","dbCartRef","on","data","firebaseWishlistObject","val","newWishlistArray","propertyKey","formattedWishlistObject","firebaseCartObject","newCartArray","formattedCartObject","forEach","cartObject","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5830688.chunk.js","sourcesContent":["// import firebase SDK from npm install firebase node package\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// web app configuration object\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAGjURZnH491UnfoBoBpxSPts9obUvkpTw\",\r\n    authDomain: \"tenal-bourchier-project-five.firebaseapp.com\",\r\n    databaseURL: \"https://tenal-bourchier-project-five.firebaseio.com\",\r\n    projectId: \"tenal-bourchier-project-five\",\r\n    storageBucket: \"tenal-bourchier-project-five.appspot.com\",\r\n    messagingSenderId: \"975956098016\",\r\n    appId: \"1:975956098016:web:f553aaf3265b0fa6a4c985\"\r\n};\r\n\r\n// initialize firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// export configured version of firebase\r\nexport default firebase;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst IconButton = ({ buttonClass, fontIcon, fontTitle, fontClass, spanText, onClickHandler }) => {\r\n    return (\r\n        <button className={buttonClass} onClick={onClickHandler}>\r\n            <FontAwesomeIcon icon={fontIcon} title={fontTitle} className={fontClass} />\r\n            <span className=\"sr-only\">{spanText}</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default IconButton;","import IconButton from './IconButton.js';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <div className=\"wrapper nav-btn-container\">\r\n                    {/* when user clicks 'star' icon, call the displayOrCloseCartOrWishlist function in App.js & pass in 'wishlist' as an argument in order to open up the wishlist */}\r\n                    <IconButton \r\n                        buttonClass=\"nav-btn icon-btn\"\r\n                        fontIcon=\"star\"\r\n                        fontTitle=\"wishlist\"\r\n                        fontClass=\"star\"\r\n                        spanText=\"A star icon, click here to access your wishlist.\"\r\n                        onClickHandler={() => { props.displayOrCloseCartOrWishlist('wishlist') }}\r\n                    />\r\n\r\n                    {/* when user clicks 'shopping cart' icon, call the displayOrCloseCartOrWishlist function in App.js & pass in 'cart' as an argument in order to open up the cart */}\r\n                    <div className=\"cart-btn\">\r\n                        <IconButton\r\n                            buttonClass=\"nav-btn icon-btn\"\r\n                            fontIcon=\"shopping-cart\"\r\n                            fontTitle=\"cart\"\r\n                            fontClass=\"cart\"\r\n                            spanText=\"A cart icon, click here to access your cart.\"\r\n                            onClickHandler={() => { props.displayOrCloseCartOrWishlist('cart') }}\r\n                        />\r\n\r\n                        <div className=\"header-item-count\">\r\n                            {\r\n                                (props.cartArray.length >= 1)\r\n                                ?\r\n                                <p>{props.cartArray.length}</p>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"wrapper heading-container\">\r\n                <h1>Flora, Fauna, & other Furry Friends</h1>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass ScrollToTop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isArrowDisplayed: false\r\n        };\r\n    }\r\n\r\n    // invoked after the 'up arrow' button is rendered for the first time (note: this function was added based on information found online)\r\n    componentDidMount() {\r\n        const scrollComponent = this;\r\n        document.addEventListener(\"scroll\", () => {\r\n            scrollComponent.arrowVisibility();\r\n        });\r\n    }\r\n\r\n    // a function that displays the 'up arrow' button if the user scrolls down 400 pixels from the top of the page, and hides it if they are less than 400px down from the top of the page\r\n    arrowVisibility = () => {\r\n        if (window.pageYOffset > 400) {\r\n            this.setState({\r\n                isArrowDisplayed: true\r\n            });\r\n        } \r\n        else {\r\n            this.setState({\r\n                isArrowDisplayed: false\r\n            });\r\n        }\r\n    }\r\n\r\n    // a function that smoothly scrolls to the top of the page if the user clicks the 'up arrow' button\r\n    scrollToTopOfPage = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"scroll-to-top\">\r\n                {/* dynamically render the 'up arrow' button (ie: only display the arrow if the state of the arrow is true, set by the arrowVisibility function) */}\r\n                { \r\n                    this.state.isArrowDisplayed &&\r\n\r\n                    // when user clicks 'up arrow' button, call the scrollToTopOfPage function which automatically scrolls to the top of the page\r\n                    <button className=\"arrow icon-btn\" onClick={() => this.scrollToTopOfPage()}>\r\n                        <FontAwesomeIcon icon=\"arrow-up\" title=\"back to top\" />\r\n                        <span className=\"sr-only\">An up arrow icon, click here to scroll to the top of the page.</span>\r\n                    </button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollToTop;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport IconButton from './IconButton.js';\r\n\r\nconst Wishlist = (props) => {\r\n\r\n    return (\r\n        <div className=\"wrapper wishlist-container\">\r\n\r\n            {/* when user clicks the 'exit' icon, call the displayOrCloseCartOrWishlist function in App.js & pass in 'wishlist' as an argument in order to close/hide the wishlist */}\r\n            <IconButton\r\n                buttonClass=\"exit-btn icon-btn\"\r\n                fontIcon=\"times\"\r\n                fontTitle=\"close wishlist\"\r\n                spanText=\"An exit icon, click here to close your wishlist.\"\r\n                onClickHandler={() => { props.displayOrCloseCartOrWishlist('wishlist') }}\r\n            />\r\n\r\n            <h2>Your Wishlist</h2>\r\n\r\n            {/* map through the wishlist array and display the image, title & remove button for each wallpaper in an individual card */}\r\n            <ul>\r\n                {props.wishlistArray.map((wallpaper) => {\r\n                    return (\r\n                        <li className=\"wishlist-card\" key={wallpaper.wallpaperId}>\r\n                            <div className=\"wishlist-image\">\r\n                                <img src={wallpaper.image} alt={wallpaper.alt} />\r\n                                <p>{wallpaper.title}</p>\r\n                            </div>\r\n\r\n                            {/* when user clicks the 'garbage' icon, call the removeWallpaperFromCartorWishlist function in App.js & pass in 'wishlist' as an argument in order to remove the wallpaper from the wishlist */}\r\n                            <IconButton\r\n                                buttonClass=\"icon-btn remove-wishlist-btn\"\r\n                                fontIcon=\"trash\"\r\n                                fontTitle=\"remove wallpaper\"\r\n                                spanText=\"Garbage can icon, click here to remove this wallpaper from your wishlist.\"\r\n                                onClickHandler={() => { props.removeWallpaperFromCartorWishlist(wallpaper.id, 'wishlist') }}\r\n                            />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wishlist;","import IconButton from './IconButton.js';\r\n\r\nconst Cart = (props) => {\r\n\r\n    return (\r\n        <div className=\"wrapper cart-container\">\r\n\r\n            {/* when user clicks the 'exit' icon, call the displayOrCloseCartOrWishlist function in App.js & pass in 'cart' as an argument in order to close/hide the cart */}\r\n            <IconButton \r\n                buttonClass=\"exit-btn icon-btn\"\r\n                fontIcon=\"times\"\r\n                fontTitle=\"close cart\"\r\n                spanText=\"An exit icon, click here to close your cart.\"\r\n                onClickHandler={() => { props.displayOrCloseCartOrWishlist('cart') }}\r\n            />\r\n\r\n\r\n            <h2>Your Cart</h2>\r\n            <p className=\"cart-item-count\"><span>{props.cartArray.length}</span> item(s) in cart</p>\r\n\r\n            {/* map through the cart array and display the image, title, price & remove button for each wallpaper in an individual card */}\r\n            <ul>\r\n                {props.cartArray.map((wallpaper) => {\r\n                    return (\r\n                        <li className=\"wishlist-card cart-card\" key={wallpaper.id}>\r\n                            <div className=\"cart-image\">\r\n                                <img src={wallpaper.image} alt={wallpaper.alt} />\r\n                            </div>\r\n                            <div className=\"text-container\">\r\n                                <div className=\"title-and-price\">\r\n                                    <p>{wallpaper.title}</p>\r\n                                    <p>${wallpaper.price}</p>\r\n                                </div>\r\n                                {/* when user clicks the 'garbage' icon, call the removeWallpaperFromCartorWishlist function in App.js which will remove the wallpaper from the cart */}\r\n                                <IconButton\r\n                                    buttonClass=\"icon-btn\"\r\n                                    fontIcon=\"trash\"\r\n                                    fontTitle=\"remove wallpaper\"\r\n                                    spanText=\"Garbage can icon, click here to remove this wallpaper from your cart.\"\r\n                                    onClickHandler={() => { props.removeWallpaperFromCartorWishlist(wallpaper.id, 'cart') }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </li>\r\n                    )\r\n                })}\r\n                {/* render the cart subtotal if there is at least one wallpaper in the cart */}\r\n                {\r\n                    (props.cartArray.length >= 1)\r\n                    ? \r\n                        <p className=\"cart-subtotal\">Your Subtotal: <span>${props.cartSubtotal.toFixed(2)}</span></p>\r\n                    : null\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","const BrowseBy = (props) => {\r\n    return (\r\n        <aside className=\"browse-aside\">\r\n            <div className=\"browse-container\">\r\n                <p>Browse by:</p>\r\n                <div className=\"browse-btns\">\r\n                    {/* when user clicks on one of the below categories (ie: all, flora, fauna, or fluffy friends), call the displayCategoryWallpapers function in App.js & pass in the desired category as an argument in order to display wallpapers of that category */}\r\n                    <button onClick={() => {props.displayCategoryWallpapers('all')} }>all wallpapers</button>\r\n                    <button onClick={() => {props.displayCategoryWallpapers('flora')}}>flora</button>\r\n                    <button onClick={() => {props.displayCategoryWallpapers('fauna') }}>fauna</button>\r\n                    <button onClick={() => {props.displayCategoryWallpapers('fluffy friends') }}>fluffy friends</button>\r\n                </div>\r\n            </div>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default BrowseBy;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst WallpaperList = (props) => {\r\n\r\n    return (\r\n        <section className=\"wallpapers-section\">\r\n            <ul className=\"wallpaper-container\">\r\n                {/* map through the wallpapers array and display the image, title, price, & 'add to wishlist' button for each one in individual cards */}\r\n                { props.wallpaperArray.map((wallpaper) => {\r\n                    // search through the wishlist array to check to see if the wallpaper being displayed is currently in the wishlist array\r\n                    let isInWishlist = props.wishlistArray.some(picture => picture.image === wallpaper.image);\r\n\r\n                    return (\r\n                        <li key={wallpaper.wallpaperId} className=\"wallpaper-card\">\r\n                            <div className=\"wallpaper-image\" tabIndex=\"0\">\r\n                                <img src={wallpaper.image} alt={wallpaper.alt} />\r\n                                {/* IF the wallpaper being displayed has been added to the wishlist by the user, then show a star icon on the image. If it has NOT been added to the wishlist, do not display a star icon on the image. */}\r\n                                {\r\n                                    (isInWishlist)\r\n                                        ? \r\n                                        <div>\r\n                                            <FontAwesomeIcon icon=\"star\" title=\"saved to wishlist\" className=\"star-sticker\" />\r\n                                            <span className=\"sr-only\">A star icon, click here to access your wishlist.</span>\r\n                                        </div> \r\n                                        : null\r\n                                }\r\n                                {/* when user clicks 'add to wishlist' button, call the addWallpaperToCartorWishlist function in App.js & pass in 'wishlist' as an argument in order to add the wallpaper to the wishlist */}\r\n                                <button className=\"add-to-btn add-to-wishlist-btn\" onClick={() => props.addWallpaperToCartorWishlist(wallpaper, 'wishlist')} tabIndex=\"0\">add to wishlist</button>\r\n                            </div>\r\n                            <h2>{wallpaper.title}</h2>\r\n                            <p>${wallpaper.price}</p>\r\n                            {/* when user clicks 'add to cart' button, call the addWallpaperToCartorWishlist function in App.js & pass in 'cart' as an argument in order to add the wallpaper to the cart */}\r\n                            <button className=\"add-to-btn\" tabIndex=\"0\" onClick={() => props.addWallpaperToCartorWishlist(wallpaper, 'cart')}>add to cart</button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default WallpaperList;","import IconButton from './IconButton.js';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className=\"modal\" tabIndex=\"0\">\r\n            <div className=\"modal-box\" tabIndex=\"0\">\r\n                {/* when user clicks 'exit' icon, call the displayOrCloseModal function in App.js which will close the pop-up modal */}\r\n                <IconButton\r\n                    buttonClass=\"exit-modal exit-btn icon-btn\"\r\n                    fontIcon=\"times\"\r\n                    fontTitle=\"close modal\"\r\n                    spanText=\"An exit icon, click here to close this pop-up modal.\"\r\n                    onClickHandler={props.displayOrCloseModal}\r\n                    tabIndex=\"0\"\r\n                />\r\n                <div>\r\n                    <h3>Oops!</h3>\r\n                    <p>You've already added this wallpaper to your wishlist, but we're happy to see how much you love it!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"wrapper\">\r\n                <p>&#169; Tenal Bourchier 2020</p>\r\n                <p>Photography &#169; Tenal & Jaden Bourchier</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// array of all available wallpapers\r\nconst wallpapers = [\r\n    {\r\n        image: 'https://i.ibb.co/BqG1C9f/IMG-5114.jpg',\r\n        alt: 'a bee flying past some lavender',\r\n        title: 'bee-utiful day',\r\n        price: 5.99,\r\n        inventory: 3,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper1'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/SNbnWDY/DSC-6433-2.jpg',\r\n        alt: 'a dog with his tongue out',\r\n        title: 'positive pup',\r\n        price: 3.99,\r\n        inventory: 4,\r\n        category: 'fluffy friends',\r\n        wallpaperId: 'wallpaper2'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/sttm90C/IMG-1883.jpg',\r\n        alt: 'close-up of a flower',\r\n        title: 'sunflower shrine',\r\n        price: 4.99,\r\n        inventory: 2,\r\n        category: 'flora',\r\n        wallpaperId: 'wallpaper3'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/PZ4D8YJ/DSC-0823.jpg',\r\n        alt: 'two orange flowers',\r\n        title: 'exotic bliss',\r\n        price: 4.99,\r\n        inventory: 3,\r\n        category: 'flora',\r\n        wallpaperId: 'wallpaper4'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/9HzJfky/DSC-0873.jpg',\r\n        alt: 'a bee standing on a large flower',\r\n        title: 'bee mine',\r\n        price: 5.99,\r\n        inventory: 3,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper5'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/hc6jqrR/IMG-9529.jpg',\r\n        alt: 'a monarch butterfly on a flower',\r\n        title: 'flutter away',\r\n        price: 3.99,\r\n        inventory: 4,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper6'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/KbyggC6/2-A6-B615-B-E17-D-4-B53-9-C66-58546-EF1-AE87.jpg',\r\n        alt: 'a leopard staring through branches',\r\n        title: 'dinner time',\r\n        price: 5.99,\r\n        inventory: 2,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper7'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/4mh81Yz/IMG-8868.jpg',\r\n        alt: 'a bee flying to lavender',\r\n        title: 'dainty daisies',\r\n        price: 4.99,\r\n        inventory: 4,\r\n        category: 'flora',\r\n        wallpaperId: 'wallpaper8'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/NZrq23w/IMG-8553.jpg',\r\n        alt: 'a small beetle on a plant',\r\n        title: 'blissful beetle',\r\n        price: 3.99,\r\n        inventory: 3,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper9'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/4tdbt6j/DSC-0817.jpg',\r\n        alt: 'a field of lavender',\r\n        title: 'lavender field',\r\n        price: 4.99,\r\n        inventory: 3,\r\n        category: 'flora',\r\n        wallpaperId: 'wallpaper10'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/ZJWQSH5/IMG-8755-3.jpg',\r\n        alt: 'a monarch butterfly on a flower',\r\n        title: 'queen monarch',\r\n        price: 3.99,\r\n        inventory: 2,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper11'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/zn1w5jk/6-AE6930-D-5-A44-4-C75-A69-A-6-B83-EA1-E3-F9-D.jpg',\r\n        alt: 'two lions looking away',\r\n        title: 'king of the jungle',\r\n        price: 5.99,\r\n        inventory: 3,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper12'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/kcrgLRj/IMG-2176.jpg',\r\n        alt: 'a closed rose',\r\n        title: 'smell the roses',\r\n        price: 4.99,\r\n        inventory: 4,\r\n        category: 'flora',\r\n        wallpaperId: 'wallpaper13'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/WkfX3WZ/DSC-6839.jpg',\r\n        alt: 'a cat looking at the camera',\r\n        title: 'furry friend',\r\n        price: 3.99,\r\n        inventory: 3,\r\n        category: 'fluffy friends',\r\n        wallpaperId: 'wallpaper14'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/p2DB4BD/IMG-1879.jpg',\r\n        alt: 'a bee flying to lavender',\r\n        title: 'buzz off',\r\n        price: 5.99,\r\n        inventory: 2,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper15'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/JRBQzkJ/5-D45224-F-43-DB-4-DB6-9-A3-D-038-AED32-FC42.jpg',\r\n        alt: 'a leopard in a tree',\r\n        title: 'prowling predator',\r\n        price: 5.99,\r\n        inventory: 3,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper16'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/N7LJ0Wb/IMG-1882.jpg',\r\n        alt: 'close-up of a rose',\r\n        title: 'kissed by a rose',\r\n        price: 4.99,\r\n        inventory: 4,\r\n        category: 'flora',\r\n        wallpaperId: 'wallpaper17'\r\n    },\r\n    {\r\n        image: 'https://i.ibb.co/0MRmHt8/IMG-1885.jpg',\r\n        alt: 'a butterfly on a flower',\r\n        title: 'dark oasis',\r\n        price: 3.99,\r\n        inventory: 2,\r\n        category: 'fauna',\r\n        wallpaperId: 'wallpaper18'\r\n    }\r\n]\r\n\r\nexport default wallpapers;","import { Component } from 'react';\r\nimport firebase from './firebase.js';\r\nimport './App.css';\r\n\r\n// importing components\r\nimport Header from './components/Header.js';\r\nimport ScrollToTop from './components/ScrollToTop.js';\r\nimport Wishlist from './components/Wishlist.js';\r\nimport Cart from './components/Cart.js';\r\nimport BrowseBy from './components/BrowseBy.js';\r\nimport WallpaperList from './components/WallpaperList.js';\r\nimport Modal from './components/Modal.js';\r\nimport Footer from './components/Footer.js';\r\nimport wallpapers from './wallpapers.js';\r\n\r\n// importing font awesome icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faStar, faTrash, faTimes, faShoppingCart, faArrowUp } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faStar, faTrash, faTimes, faShoppingCart, faArrowUp);\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            wallpaperArray: wallpapers,\r\n            wishlistArray: [],\r\n            cartArray: [],\r\n            cartSubtotal: 0,\r\n            isWishlistDisplayed: false,\r\n            isCartDisplayed: false,\r\n            isModalDisplayed: false,\r\n            isArrowDisplayed: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // reference the app's database for wishlist & cart\r\n        const dbWishlistRef = firebase.database().ref('wishlist');\r\n        const dbCartRef = firebase.database().ref('cart');\r\n        \r\n        // WISHLIST\r\n        dbWishlistRef.on('value', (data) => {\r\n            // pull any existing data from the database\r\n            const firebaseWishlistObject = data.val();\r\n\r\n            let newWishlistArray = [];\r\n\r\n            // loop through the object returned from the wishlist database\r\n            for (let propertyKey in firebaseWishlistObject) {\r\n                // extract the object key and all internal property values from the object\r\n                const imageVal = firebaseWishlistObject[propertyKey].image;\r\n                const altVal = firebaseWishlistObject[propertyKey].alt;\r\n                const titleVal = firebaseWishlistObject[propertyKey].title;\r\n                const priceVal = firebaseWishlistObject[propertyKey].price;\r\n                const idVal = firebaseWishlistObject[propertyKey].wallpaperId;\r\n\r\n                // reformat the object\r\n                const formattedWishlistObject = {\r\n                    id: propertyKey,\r\n                    image: imageVal,\r\n                    alt: altVal,\r\n                    title: titleVal,\r\n                    price: priceVal,\r\n                    wallpaperId: idVal,\r\n                }\r\n\r\n                // push the newly formatted object into the new wishlist array\r\n                newWishlistArray.push(formattedWishlistObject);\r\n            }\r\n\r\n            // update the state of the wishlist array with the new wishlist array (ie: firebase data)\r\n            this.setState({\r\n                wishlistArray: newWishlistArray\r\n            });\r\n        });\r\n\r\n        // CART\r\n        dbCartRef.on('value', (data) => {\r\n            // pull any existing data from the database\r\n            const firebaseCartObject = data.val();\r\n\r\n            let newCartArray = [];\r\n\r\n            // loop through the object returned from the database\r\n            for (let propertyKey in firebaseCartObject) {\r\n                // extract the object key and all internal property values from the object\r\n                const imageVal = firebaseCartObject[propertyKey].image;\r\n                const altVal = firebaseCartObject[propertyKey].alt;\r\n                const titleVal = firebaseCartObject[propertyKey].title;\r\n                const priceVal = firebaseCartObject[propertyKey].price;\r\n                const idVal = firebaseCartObject[propertyKey].wallpaperId;\r\n\r\n                // reformat the object\r\n                const formattedCartObject = {\r\n                    id: propertyKey,\r\n                    image: imageVal,\r\n                    alt: altVal,\r\n                    title: titleVal,\r\n                    price: priceVal,\r\n                    wallpaperId: idVal,\r\n                }\r\n\r\n                // push the newly formatted object into the new wishlist array\r\n                newCartArray.push(formattedCartObject);\r\n            }\r\n            \r\n            // if at least one object exists in the firebase cart, loop through the object(s) & add their prices together\r\n            if (firebaseCartObject !== null) {\r\n                let price = 0;\r\n                newCartArray.forEach((cartObject) => {\r\n                    price = price + (cartObject.price)\r\n                });\r\n\r\n                // update the state of the cart array & cart subtotal\r\n                this.setState({\r\n                    cartArray: newCartArray,\r\n                    cartSubtotal: price\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    cartArray: [],\r\n                    cartSubtotal: 0\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // BROWSE/FILTER FUNCTIONS ---------------------------------\r\n\r\n    // (1) a function that filters through the wallpapers and displays only the wallpapers that match the category the user has selected (ie: 'all', 'flora', 'fauna', or 'fluffy friends')\r\n    displayCategoryWallpapers = (category) => {\r\n        if (category === 'all') {\r\n            this.setState({\r\n                wallpaperArray: wallpapers\r\n            });\r\n        } else {\r\n            const wallpaperArrayByCategory = wallpapers.filter((wallpaper) => {\r\n                return wallpaper.category === category\r\n            })\r\n            this.setState({\r\n                wallpaperArray: wallpaperArrayByCategory\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // CART/WISHLIST FUNCTIONS ---------------------------------\r\n\r\n    // (1) a function that adds the wallpaper to the cart OR wishlist (& firebase) depending on if user clicks the ‘add to wishlist’ or 'add to cart' button\r\n    addWallpaperToCartorWishlist = (wallpaperToBeAdded, cartOrWishlist) => {\r\n        const dbRef = firebase.database().ref(cartOrWishlist);\r\n\r\n        // if user is trying to add to wishlist, check to see if wallpaper has already been added to wishlist before adding it, else if user is adding to cart add wallpaper without checking\r\n        if (cartOrWishlist === 'wishlist') {\r\n            // filter through wishlist array to see if the wallpaper has already been added to the wishlist (ie: check to see if the wallpaper ID already exists within the array)\r\n            const filteredWishlistArray = this.state.wishlistArray.filter((wishlistWallpaper) => {\r\n                return wishlistWallpaper.wallpaperId === wallpaperToBeAdded.wallpaperId\r\n            });\r\n\r\n            // if the wallpaper has already been added, then display a modal informing the user. Else, add the wallpaper object to the wishlist array\r\n            if (filteredWishlistArray.length >= 1) {\r\n                this.displayOrCloseModal();\r\n            } else {\r\n                dbRef.push(wallpaperToBeAdded);\r\n            }\r\n        } \r\n        else if (cartOrWishlist === 'cart') {\r\n            dbRef.push(wallpaperToBeAdded);\r\n        }\r\n    }\r\n\r\n    // (2) a function that removes the wallpaper from the cart OR wishlist (& firebase) when user clicks the 'garbage' icon (ie: remove button)\r\n    removeWallpaperFromCartorWishlist = (wallpaperId, cartOrWishlist) => {\r\n        const dbRef = firebase.database().ref(cartOrWishlist);\r\n        dbRef.child(wallpaperId).remove();\r\n    }\r\n\r\n    // (3) a function that displays the cart OR wishlist depending on if user clicks the 'cart' icon (ie: cart button) or 'star' icon (ie: wishlist button), then closes the cart or wishlist when the user clicks the 'exit/close' button inside them\r\n    displayOrCloseCartOrWishlist = (cartOrWishlist) => {\r\n        if (cartOrWishlist === 'cart') {\r\n            this.setState({\r\n                isCartDisplayed: !this.state.isCartDisplayed\r\n            });\r\n            console.log('cart')\r\n        } else if (cartOrWishlist === 'wishlist') {\r\n            this.setState({\r\n                isWishlistDisplayed: !this.state.isWishlistDisplayed\r\n            });\r\n            console.log('wishlist')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // MODAL FUNCTION ---------------------------------\r\n\r\n    // (1) a function that displays the modal when user attempts to add a wallpaper to the wishlist that has already been added, and closes the modal when the user clicks the exit button inside the modal\r\n    displayOrCloseModal = () => {\r\n        this.setState({\r\n            isModalDisplayed: !this.state.isModalDisplayed\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* skiplink for accessibility */}\r\n                <a href='#shop-wallpapers' className='skip-link'>\r\n                    Skip to Main Content\r\n\t\t\t\t</a>\r\n                <Header \r\n                    displayOrCloseCartOrWishlist={this.displayOrCloseCartOrWishlist}\r\n                    cartArray={this.state.cartArray}\r\n                />\r\n                <main id=\"shop-wallpapers\">\r\n                    <div className=\"wrapper main-container\">\r\n                    {/* dynamically render the wishlist section (ie: only display the wishlist if the state of the wishlist is true) */}\r\n                    {\r\n                        this.state.isWishlistDisplayed &&\r\n                        <Wishlist \r\n                            isWishlistDisplayed={this.state.isWishlistDisplayed}\r\n                            wishlistArray={this.state.wishlistArray}\r\n                            removeWallpaperFromCartorWishlist={this.removeWallpaperFromCartorWishlist}\r\n                            displayOrCloseCartOrWishlist={this.displayOrCloseCartOrWishlist}\r\n                        />\r\n                    }\r\n                    {/* dynamically render the cart section (ie: only display the cart if the state of the cart is true) */}\r\n                    {\r\n                        this.state.isCartDisplayed &&\r\n                        <Cart\r\n                            isCartDisplayed={this.state.isCartDisplayed}\r\n                            cartArray={this.state.cartArray}\r\n                            removeWallpaperFromCartorWishlist={this.removeWallpaperFromCartorWishlist}\r\n                            displayOrCloseCartOrWishlist={this.displayOrCloseCartOrWishlist}\r\n                            cartSubtotal={this.state.cartSubtotal}\r\n                        />\r\n                    }\r\n                    {/* dynamically render the modal (ie: only display the modal if the state of the modal is true) */}\r\n                    {\r\n                        this.state.isModalDisplayed &&\r\n                        <Modal \r\n                        isModalDisplayed={this.state.isModalDisplayed}\r\n                        displayOrCloseModal={this.displayOrCloseModal}\r\n                        />\r\n                    }\r\n                    <ScrollToTop \r\n                        isArrowDisplayed={this.state.isArrowDisplayed}\r\n                    />\r\n                    <BrowseBy \r\n                        displayCategoryWallpapers={this.displayCategoryWallpapers}\r\n                    />\r\n                    <WallpaperList \r\n                        wallpaperArray={this.state.wallpaperArray}\r\n                        wishlistArray={this.state.wishlistArray}\r\n                        cartArray={this.state.cartArray}\r\n                        addWallpaperToCartorWishlist={this.addWallpaperToCartorWishlist}\r\n                    />\r\n                    </div>\r\n                </main>\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}